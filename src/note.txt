import React, { useRef, useState, useEffect } from 'react';
import { FileDrop } from 'react-file-drop';

function VideoUploadComponent() {
    const [videoSrc, setVideoSrc] = useState(null);
    const [frame, setFrame] = useState(0);
    const [totalFrames, setTotalFrames] = useState(0);
    const fileInputRef = useRef(null);
    const videoRef = useRef(null);

    const handleFileChange = (event) => {
        const file = event.target.files[0];
        if (file) {
            const fileUrl = URL.createObjectURL(file);
            setVideoSrc(fileUrl);
        }
    };

    const handleDrop = (files) => {
        if (files && files.length > 0) {
            const fileUrl = URL.createObjectURL(files[0]);
            setVideoSrc(fileUrl);
        }
    };

    useEffect(() => {
        if (videoRef.current) {
            const video = videoRef.current;

            // Calculate total frames
            const updateTotalFrames = () => {
                const fps = 25; // Assuming 25 frames per second, adjust as needed
                setTotalFrames(video.duration * fps);
            };

            video.addEventListener('loadedmetadata', updateTotalFrames);
            return () => {
                video.removeEventListener('loadedmetadata', updateTotalFrames);
            };
        }
    }, [videoSrc]);

    const handleSliderChange = (e) => {
        const frameNumber = parseInt(e.target.value, 10);
        setFrame(frameNumber);

        const fps = 25; // Assuming 25 frames per second, adjust as needed
        const time = frameNumber / fps;
        videoRef.current.currentTime = time;
    };

    return (
        <div>
            <div className="drop-area">
                {!videoSrc && (
                    <FileDrop onDrop={handleDrop} onTargetClick={() => fileInputRef.current.click()}>
                        Drop your video here or click to upload
                    </FileDrop>
                )}
                <input
                    ref={fileInputRef}
                    type="file"
                    onChange={handleFileChange}
                    style={{ display: 'none' }}
                />
                {videoSrc && (
                    <div className="video-container">
                        <video ref={videoRef} src={videoSrc} preload="metadata" />
                    </div>
                )}
            </div>
            {videoSrc && (
                <div className="slider-container">
                    <input
                        type="range"
                        min="0"
                        max={totalFrames}
                        value={frame}
                        onChange={handleSliderChange}
                    />
                </div>
            )}
        </div>
    );

}

export default VideoUploadComponent;